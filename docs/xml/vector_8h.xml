<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="vector_8h" kind="file" language="C++">
    <compoundname>vector.h</compoundname>
    <includedby refid="angka_8h" local="yes">C:/Users/Lenovo/Documents/projects/windows/angka/include/angka.h</includedby>
    <invincdepgraph>
      <node id="2">
        <label>C:/Users/Lenovo/Documents/projects/windows/angka/include/angka.h</label>
        <link refid="angka_8h"/>
      </node>
      <node id="1">
        <label>C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h</label>
        <link refid="vector_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structs__vector" prot="public">s_vector</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="vector_8h_1acf38fefb2121add30c4070bec3e07182" prot="public" static="no">
        <type>char *</type>
        <definition>typedef char* p_vectorString_t</definition>
        <argsstring></argsstring>
        <name>p_vectorString_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="8" column="15" bodyfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" prot="public" static="no">
        <type>struct <ref refid="structs__vector" kindref="compound">s_vector</ref></type>
        <definition>typedef struct s_vector AgxVector</definition>
        <argsstring></argsstring>
        <name>AgxVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="13" column="11"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="vector_8h_1a457045cc78bbf48783605f0243e60cdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
        <definition>AgxVector* agx_vector_new</definition>
        <argsstring>(int size)</argsstring>
        <name>agx_vector_new</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="15" column="11" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="15" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1ad32bae52f994504eebf6ab7b17048a79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* agx_vector_set_item</definition>
        <argsstring>(AgxVector *vec, int index, double val)</argsstring>
        <name>agx_vector_set_item</name>
        <param>
          <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="16" column="6" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="16" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1aea6bd165c3bf998e0ae8c02fdc26c568" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double agx_vector_get_item</definition>
        <argsstring>(AgxVector *vec, int index)</argsstring>
        <name>agx_vector_get_item</name>
        <param>
          <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="17" column="8" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="17" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1ae85875c8e7b7af9cd1c93d65805b4bbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="vector_8h_1acf38fefb2121add30c4070bec3e07182" kindref="member">p_vectorString_t</ref></type>
        <definition>p_vectorString_t agx_vector_to_string</definition>
        <argsstring>(AgxVector *vec, int islong)</argsstring>
        <name>agx_vector_to_string</name>
        <param>
          <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>int</type>
          <declname>islong</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="18" column="18" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="18" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1a52e20a9dff729e8eff11d5a4c40bb919" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void agx_vector_delete</definition>
        <argsstring>(AgxVector *vec)</argsstring>
        <name>agx_vector_delete</name>
        <param>
          <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="19" column="6" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="19" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1ad85459b19a7f5c885b0a77a1394aadb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
        <definition>AgxVector* agx_vector_new_random</definition>
        <argsstring>(int size, double min, double max)</argsstring>
        <name>agx_vector_new_random</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>double</type>
          <declname>min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="20" column="11" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="20" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1acc2a8d402609ce6ee7d56cb87c460a53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* agx_vector_print</definition>
        <argsstring>(AgxVector *vec, int islong)</argsstring>
        <name>agx_vector_print</name>
        <param>
          <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>int</type>
          <declname>islong</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="21" column="6" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="21" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1ab5987bae85e72223c2865df095ac6e24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* agx_vector_append_value</definition>
        <argsstring>(AgxVector *vec, double val)</argsstring>
        <name>agx_vector_append_value</name>
        <param>
          <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="22" column="6" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="22" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1adaa50b66314d48d0931fa6609ab3d53b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* agx_vector_append_vector</definition>
        <argsstring>(AgxVector *vec_target, AgxVector *vec_another)</argsstring>
        <name>agx_vector_append_vector</name>
        <param>
          <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
          <declname>vec_target</declname>
        </param>
        <param>
          <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
          <declname>vec_another</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="23" column="6" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="23" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1a9a5f1d7dda65b63f3db93a0a05297216" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* agx_vector_print_partial</definition>
        <argsstring>(AgxVector *vec)</argsstring>
        <name>agx_vector_print_partial</name>
        <param>
          <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="24" column="6" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="24" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1a4e9d05541c9275e40ead6d1c1b40e363" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* agx_vector_print_full</definition>
        <argsstring>(AgxVector *vec)</argsstring>
        <name>agx_vector_print_full</name>
        <param>
          <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="25" column="6" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="25" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1a7b64164c6e944af558ad49b2817e50b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* agx_vector_add_by_value</definition>
        <argsstring>(AgxVector *vec, double val)</argsstring>
        <name>agx_vector_add_by_value</name>
        <param>
          <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="26" column="6" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="26" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1aff90b9fb127b046b2b5527e64161fe8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* agx_vector_substract_by_value</definition>
        <argsstring>(AgxVector *vec, double val)</argsstring>
        <name>agx_vector_substract_by_value</name>
        <param>
          <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="27" column="6" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="27" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1a8dbb9647a6c1d41ead49622a00cb3c70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* agx_vector_multiply_by_value</definition>
        <argsstring>(AgxVector *vec, double val)</argsstring>
        <name>agx_vector_multiply_by_value</name>
        <param>
          <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="28" column="6" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="28" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1accc6db9c3c2dd6741fdb68f5c6dc06a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* agx_vector_devide_by_value</definition>
        <argsstring>(AgxVector *vec, double val)</argsstring>
        <name>agx_vector_devide_by_value</name>
        <param>
          <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="29" column="6" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="29" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1abc05df59c0499344f389274e5efc21eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* agx_vector_change_elements_by_value</definition>
        <argsstring>(AgxVector *vec, double val)</argsstring>
        <name>agx_vector_change_elements_by_value</name>
        <param>
          <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="30" column="6" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="30" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1af9e1c8ee2bf7351bc31df147eb42afe7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
        <definition>AgxVector* agx_vector_new_constant</definition>
        <argsstring>(int size, double val)</argsstring>
        <name>agx_vector_new_constant</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="31" column="11" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="31" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1a867ecf8d30d18a4be0bceea2dff0c8e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
        <definition>AgxVector* agx_vector_new_duplicate_size</definition>
        <argsstring>(AgxVector *vec)</argsstring>
        <name>agx_vector_new_duplicate_size</name>
        <param>
          <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="32" column="11" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="32" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1a5ce220c5e9517000994a481a4d9da1f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* agx_vector_copy_elements</definition>
        <argsstring>(AgxVector *src, AgxVector *target)</argsstring>
        <name>agx_vector_copy_elements</name>
        <param>
          <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="33" column="6" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="33" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1acc3369d2eef5cd31c459e74e6f712309" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
        <definition>AgxVector* agx_vector_new_copy</definition>
        <argsstring>(AgxVector *vec)</argsstring>
        <name>agx_vector_new_copy</name>
        <param>
          <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="34" column="11" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="34" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1ab939bf6fddf72446bd6ce0cd461b67f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
        <definition>AgxVector* agx_vector_new_zero</definition>
        <argsstring>(int size)</argsstring>
        <name>agx_vector_new_zero</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="35" column="11" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="35" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1a9d9c652f8e2eaf95147b94a8f652185e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
        <definition>AgxVector* agx_vector_new_linspace</definition>
        <argsstring>(double min, double max, int size)</argsstring>
        <name>agx_vector_new_linspace</name>
        <param>
          <type>double</type>
          <declname>min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="36" column="11" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="36" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1ac66edd408e8636a3baafa4a030b69a64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
        <definition>AgxVector* agx_vector_new_arange</definition>
        <argsstring>(int min, int step, int max)</argsstring>
        <name>agx_vector_new_arange</name>
        <param>
          <type>int</type>
          <declname>min</declname>
        </param>
        <param>
          <type>int</type>
          <declname>step</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="37" column="11" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="37" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1a2e61de1958f826c7c48979ff08fcc1ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
        <definition>AgxVector* agx_vector_new_arange_double</definition>
        <argsstring>(double min, double step, double max)</argsstring>
        <name>agx_vector_new_arange_double</name>
        <param>
          <type>double</type>
          <declname>min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>step</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="38" column="11" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="38" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1a6b0302f279e3e983932bc5b7f5367440" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double agx_vector_min</definition>
        <argsstring>(AgxVector *vec)</argsstring>
        <name>agx_vector_min</name>
        <param>
          <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="39" column="8" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="39" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1a0d30058c1ad1b89b2e0f193164517a93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double agx_vector_max</definition>
        <argsstring>(AgxVector *vec)</argsstring>
        <name>agx_vector_max</name>
        <param>
          <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="40" column="8" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="40" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1aacf739153ee1da0fcbf8f9ac9533e0e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
        <definition>AgxVector* agx_vector_new_values</definition>
        <argsstring>(int size,...)</argsstring>
        <name>agx_vector_new_values</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="41" column="11" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="41" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1af2a12cb2b7c53f1f847f703576985429" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* agx_vector_input_function</definition>
        <argsstring>(AgxVector *vec, void(*function)(double *))</argsstring>
        <name>agx_vector_input_function</name>
        <param>
          <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>void(*)(double *)</type>
          <declname>function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="42" column="6" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="42" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1a1a43a39fc6104b5db6324bd3edd61cc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* agx_vector_sin</definition>
        <argsstring>(AgxVector *vec)</argsstring>
        <name>agx_vector_sin</name>
        <param>
          <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="43" column="6" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="43" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1a773299e2206268d67dc091a9f1384199" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void agx_sin</definition>
        <argsstring>(double *val)</argsstring>
        <name>agx_sin</name>
        <param>
          <type>double *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="44" column="6" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="44" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1a8075f305aa780c98cbb7ea742e3001dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int agx_vector_isexist</definition>
        <argsstring>(AgxVector *vec, int idx1, int idx2, double val)</argsstring>
        <name>agx_vector_isexist</name>
        <param>
          <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="45" column="5" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="45" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="vector_8h_1a7955330a6a1d466443570769996930dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* agx_vector_sort</definition>
        <argsstring>(AgxVector *vec)</argsstring>
        <name>agx_vector_sort</name>
        <param>
          <type><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref> *</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" line="46" column="6" declfile="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h" declline="46" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__VECTOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__VECTOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="vector_8h_1acf38fefb2121add30c4070bec3e07182" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="vector_8h_1acf38fefb2121add30c4070bec3e07182" kindref="member">p_vectorString_t</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="structs__vector" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structs__vector" kindref="compound">s_vector</ref><sp/>{</highlight></codeline>
<codeline lineno="11" refid="structs__vector_1a3496ea3931d9ec95424474a39a844e8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="structs__vector_1a3496ea3931d9ec95424474a39a844e8f" kindref="member">p_r_nums</ref>;</highlight></codeline>
<codeline lineno="12" refid="structs__vector_1a439227feff9d7f55384e8780cfc2eb82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structs__vector_1a439227feff9d7f55384e8780cfc2eb82" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="13" refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" refkind="member"><highlight class="normal">}<sp/><ref refid="vector_8h_1aaa1a616db5a4ca5a1e1c1597bdac180b" kindref="member">AgxVector</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="vector_8h_1a457045cc78bbf48783605f0243e60cdd" refkind="member"><highlight class="normal"><ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*<ref refid="vector_8h_1a457045cc78bbf48783605f0243e60cdd" kindref="member">agx_vector_new</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="16" refid="vector_8h_1ad32bae52f994504eebf6ab7b17048a79" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="vector_8h_1ad32bae52f994504eebf6ab7b17048a79" kindref="member">agx_vector_set_item</ref>(<ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*vec,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="17" refid="vector_8h_1aea6bd165c3bf998e0ae8c02fdc26c568" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="vector_8h_1aea6bd165c3bf998e0ae8c02fdc26c568" kindref="member">agx_vector_get_item</ref>(<ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*vec,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="18" refid="vector_8h_1ae85875c8e7b7af9cd1c93d65805b4bbd" refkind="member"><highlight class="normal"><ref refid="vector_8h_1acf38fefb2121add30c4070bec3e07182" kindref="member">p_vectorString_t</ref><sp/><ref refid="vector_8h_1ae85875c8e7b7af9cd1c93d65805b4bbd" kindref="member">agx_vector_to_string</ref>(<ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*vec,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>islong);</highlight></codeline>
<codeline lineno="19" refid="vector_8h_1a52e20a9dff729e8eff11d5a4c40bb919" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="vector_8h_1a52e20a9dff729e8eff11d5a4c40bb919" kindref="member">agx_vector_delete</ref>(<ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*vec);</highlight></codeline>
<codeline lineno="20" refid="vector_8h_1ad85459b19a7f5c885b0a77a1394aadb4" refkind="member"><highlight class="normal"><ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*<ref refid="vector_8h_1ad85459b19a7f5c885b0a77a1394aadb4" kindref="member">agx_vector_new_random</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max);</highlight></codeline>
<codeline lineno="21" refid="vector_8h_1acc2a8d402609ce6ee7d56cb87c460a53" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="vector_8h_1acc2a8d402609ce6ee7d56cb87c460a53" kindref="member">agx_vector_print</ref>(<ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*vec,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>islong);</highlight></codeline>
<codeline lineno="22" refid="vector_8h_1ab5987bae85e72223c2865df095ac6e24" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="vector_8h_1ab5987bae85e72223c2865df095ac6e24" kindref="member">agx_vector_append_value</ref>(<ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*vec,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="23" refid="vector_8h_1adaa50b66314d48d0931fa6609ab3d53b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="vector_8h_1adaa50b66314d48d0931fa6609ab3d53b" kindref="member">agx_vector_append_vector</ref>(<ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*vec_target,<sp/><ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*vec_another);</highlight></codeline>
<codeline lineno="24" refid="vector_8h_1a9a5f1d7dda65b63f3db93a0a05297216" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="vector_8h_1a9a5f1d7dda65b63f3db93a0a05297216" kindref="member">agx_vector_print_partial</ref>(<ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*vec);</highlight></codeline>
<codeline lineno="25" refid="vector_8h_1a4e9d05541c9275e40ead6d1c1b40e363" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="vector_8h_1a4e9d05541c9275e40ead6d1c1b40e363" kindref="member">agx_vector_print_full</ref>(<ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*vec);</highlight></codeline>
<codeline lineno="26" refid="vector_8h_1a7b64164c6e944af558ad49b2817e50b8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="vector_8h_1a7b64164c6e944af558ad49b2817e50b8" kindref="member">agx_vector_add_by_value</ref>(<ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*vec,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="27" refid="vector_8h_1aff90b9fb127b046b2b5527e64161fe8b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="vector_8h_1aff90b9fb127b046b2b5527e64161fe8b" kindref="member">agx_vector_substract_by_value</ref>(<ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*vec,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="28" refid="vector_8h_1a8dbb9647a6c1d41ead49622a00cb3c70" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="vector_8h_1a8dbb9647a6c1d41ead49622a00cb3c70" kindref="member">agx_vector_multiply_by_value</ref>(<ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*vec,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="29" refid="vector_8h_1accc6db9c3c2dd6741fdb68f5c6dc06a1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="vector_8h_1accc6db9c3c2dd6741fdb68f5c6dc06a1" kindref="member">agx_vector_devide_by_value</ref>(<ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*vec,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="30" refid="vector_8h_1abc05df59c0499344f389274e5efc21eb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="vector_8h_1abc05df59c0499344f389274e5efc21eb" kindref="member">agx_vector_change_elements_by_value</ref>(<ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*vec,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="31" refid="vector_8h_1af9e1c8ee2bf7351bc31df147eb42afe7" refkind="member"><highlight class="normal"><ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*<ref refid="vector_8h_1af9e1c8ee2bf7351bc31df147eb42afe7" kindref="member">agx_vector_new_constant</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="32" refid="vector_8h_1a867ecf8d30d18a4be0bceea2dff0c8e9" refkind="member"><highlight class="normal"><ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*<ref refid="vector_8h_1a867ecf8d30d18a4be0bceea2dff0c8e9" kindref="member">agx_vector_new_duplicate_size</ref>(<ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*vec);</highlight></codeline>
<codeline lineno="33" refid="vector_8h_1a5ce220c5e9517000994a481a4d9da1f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="vector_8h_1a5ce220c5e9517000994a481a4d9da1f0" kindref="member">agx_vector_copy_elements</ref>(<ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*src,<sp/><ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*target);</highlight></codeline>
<codeline lineno="34" refid="vector_8h_1acc3369d2eef5cd31c459e74e6f712309" refkind="member"><highlight class="normal"><ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*<ref refid="vector_8h_1acc3369d2eef5cd31c459e74e6f712309" kindref="member">agx_vector_new_copy</ref>(<ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*vec);</highlight></codeline>
<codeline lineno="35" refid="vector_8h_1ab939bf6fddf72446bd6ce0cd461b67f5" refkind="member"><highlight class="normal"><ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*<ref refid="vector_8h_1ab939bf6fddf72446bd6ce0cd461b67f5" kindref="member">agx_vector_new_zero</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="36" refid="vector_8h_1a9d9c652f8e2eaf95147b94a8f652185e" refkind="member"><highlight class="normal"><ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*<ref refid="vector_8h_1a9d9c652f8e2eaf95147b94a8f652185e" kindref="member">agx_vector_new_linspace</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="37" refid="vector_8h_1ac66edd408e8636a3baafa4a030b69a64" refkind="member"><highlight class="normal"><ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*<ref refid="vector_8h_1ac66edd408e8636a3baafa4a030b69a64" kindref="member">agx_vector_new_arange</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max);</highlight></codeline>
<codeline lineno="38" refid="vector_8h_1a2e61de1958f826c7c48979ff08fcc1ca" refkind="member"><highlight class="normal"><ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*<ref refid="vector_8h_1a2e61de1958f826c7c48979ff08fcc1ca" kindref="member">agx_vector_new_arange_double</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>step,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max);</highlight></codeline>
<codeline lineno="39" refid="vector_8h_1a6b0302f279e3e983932bc5b7f5367440" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="vector_8h_1a6b0302f279e3e983932bc5b7f5367440" kindref="member">agx_vector_min</ref>(<ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*vec);</highlight></codeline>
<codeline lineno="40" refid="vector_8h_1a0d30058c1ad1b89b2e0f193164517a93" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="vector_8h_1a0d30058c1ad1b89b2e0f193164517a93" kindref="member">agx_vector_max</ref>(<ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*vec);</highlight></codeline>
<codeline lineno="41" refid="vector_8h_1aacf739153ee1da0fcbf8f9ac9533e0e4" refkind="member"><highlight class="normal"><ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*<ref refid="vector_8h_1aacf739153ee1da0fcbf8f9ac9533e0e4" kindref="member">agx_vector_new_values</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/>...<sp/>);</highlight></codeline>
<codeline lineno="42" refid="vector_8h_1af2a12cb2b7c53f1f847f703576985429" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="vector_8h_1af2a12cb2b7c53f1f847f703576985429" kindref="member">agx_vector_input_function</ref>(<ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*vec,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">function</highlight><highlight class="normal">)(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="43" refid="vector_8h_1a1a43a39fc6104b5db6324bd3edd61cc2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="vector_8h_1a1a43a39fc6104b5db6324bd3edd61cc2" kindref="member">agx_vector_sin</ref>(<ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*vec);</highlight></codeline>
<codeline lineno="44" refid="vector_8h_1a773299e2206268d67dc091a9f1384199" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="vector_8h_1a773299e2206268d67dc091a9f1384199" kindref="member">agx_sin</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*val);</highlight></codeline>
<codeline lineno="45" refid="vector_8h_1a8075f305aa780c98cbb7ea742e3001dd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="vector_8h_1a8075f305aa780c98cbb7ea742e3001dd" kindref="member">agx_vector_isexist</ref>(<ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*vec,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="46" refid="vector_8h_1a7955330a6a1d466443570769996930dc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="vector_8h_1a7955330a6a1d466443570769996930dc" kindref="member">agx_vector_sort</ref>(<ref refid="structs__vector" kindref="compound">AgxVector</ref><sp/>*vec);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Lenovo/Documents/projects/windows/angka/include/vector.h"/>
  </compounddef>
</doxygen>
